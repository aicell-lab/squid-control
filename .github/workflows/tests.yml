name: Tests

on: push

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: python:3.10.13-slim
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Install system dependencies
      run: |
        apt-get update
        apt-get install -y \
          libgl1-mesa-glx \
          libglib2.0-0 \
          git \
          gpg

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[dev]



    - name: Run all tests with coverage (CI - Including Integration Tests)
      shell: bash
      env:
        SQUID_SIMULATION_MODE: "true"
        PYTHONPATH: "."
        SQUID_WORKSPACE_TOKEN: ${{ secrets.SQUID_WORKSPACE_TOKEN }}
      run: |
        echo "üß™ Running ALL TESTS in CI environment (unit + Hypha RPC integration)"
        echo "üåê Integration tests are INCLUDED in CI" 
        echo "üîß Hardware modules excluded in simulation mode"
        echo "üí° To run only unit tests locally: python scripts/run_tests.py --skip-integration"
        echo "üí° To run only integration with Hypha RPC tests locally: python scripts/run_tests.py --integration-only"
        echo ""
        pytest \
          --cov=squid_control \
          --cov-config=pyproject.toml \
          --cov-report=xml:coverage.xml \
          --cov-report=html:htmlcov \
          --cov-report=term-missing \
          --junitxml=pytest-results.xml \
          -v

    - name: Upload coverage reports to Codecov
      if: matrix.python-version == '3.10'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        verbose: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    - name: Upload coverage HTML report as artifact
      if: matrix.python-version == '3.10'
      uses: actions/upload-artifact@v4
      with:
        name: coverage-html-report
        path: htmlcov/
        retention-days: 30

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: pytest-results-${{ matrix.python-version }}
        path: pytest-results.xml
        retention-days: 30

    - name: Coverage comment
      if: github.event_name == 'pull_request' && matrix.python-version == '3.10'
      uses: py-cov-action/python-coverage-comment-action@v3
      with:
        GITHUB_TOKEN: ${{ github.token }}
        MINIMUM_GREEN: 60
        MINIMUM_ORANGE: 40
