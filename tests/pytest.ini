[tool:pytest]
# Pytest configuration for squid-control tests

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Directories to search for tests
testpaths = tests

# Minimum version requirements  
minversion = 6.0

# Add markers for different test types
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    simulation: marks tests that require simulation mode
    hardware: marks tests that require real hardware (skipped by default)
    local: marks tests that require local setup
    integration: marks tests as integration tests (require network access and tokens)
    unit: marks tests as unit tests
    cleanup: marks tests that require cleanup of test directories

# Asyncio configuration
asyncio_mode = strict
asyncio_default_fixture_loop_scope = function

# Output options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --maxfail=3
    --durations=10
    --timeout=1000
    --timeout-method=thread
    --cleanup-docs

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PytestDeprecationWarning
    ignore::PytestCollectionWarning
    ignore:pkg_resources is deprecated:DeprecationWarning
    ignore:Deprecated call to.*pkg_resources.*:DeprecationWarning
    ignore:Support for class-based.*config.*is deprecated:PydanticDeprecatedSince20

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage settings are configured in pyproject.toml
# Do not add coverage options here to avoid conflicts

# Timeout for tests (if using pytest-timeout)
# timeout = 300 