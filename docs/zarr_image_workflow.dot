digraph ZarrImageWorkflow {
    // Graph settings
    rankdir=TB;
    node [shape=box, style=filled, fillcolor=lightblue, fontsize=10, margin="0.2,0.1"];
    edge [fontsize=9];
    
    // User Interaction
    user [label="User Interaction", fillcolor=lightyellow];
    request_image [label="Request Image\n(dataset_id, channel, scale, x, y)"];
    user -> request_image;
    
    // Backend Services
    subgraph cluster_backend {
        label="Backend Services";
        style=filled;
        color=lightgrey;
        
        zarr_manager [label="ZarrImageManager\nConstruct Chunk URL"];
        artifact_manager [label="Artifact Manager\nZip Endpoint Access"];
        metadata_cache [label="Metadata Cache\n(.zarray, .zgroup)\n40 min expiry"];
        tile_cache [label="Processed Tile Cache\n40 min expiry, 1000 tiles"];
        empty_regions_cache [label="Empty Regions Cache\n40 min expiry, 500 entries"];
        chunk_processing [label="Chunk Processing\n(Decompress, Decode, Format)"];
        
        request_image -> zarr_manager;
        zarr_manager -> metadata_cache [label="Check Metadata"];
        metadata_cache -> zarr_manager [label="Get Chunk Info"];
        zarr_manager -> tile_cache [label="Check Cache"];
        tile_cache -> zarr_manager [label="Return if Cached"];
        zarr_manager -> empty_regions_cache [label="Check Empty"];
        zarr_manager -> artifact_manager [label="Construct URL\n{server}/{workspace}/artifacts/{name}/zip-files/{path}?path={chunk}"];
        artifact_manager -> chunk_processing [label="HTTP GET\n(aiohttp)"];
        chunk_processing -> tile_cache [label="Cache Result"];
    }
    
    // Storage Backend
    subgraph cluster_storage {
        label="Hypha Storage";
        style=filled;
        color=lightgrey;
        
        zip_archives [label="ZIP Archives\n(Zarr Chunks)"];
        zip_endpoint [label="Artifact Manager\nZip Endpoint\n(Direct Access)"];
        
        zip_archives -> zip_endpoint [label="Serve Chunks"];
        zip_endpoint -> artifact_manager;
    }
    
    // Data Flow Explanation
    data_flow1 [shape=note, fillcolor=lightyellow, label="1. User selects image parameters"];
    data_flow2 [shape=note, fillcolor=lightyellow, label="2. Manager constructs zip endpoint URL"];
    data_flow3 [shape=note, fillcolor=lightyellow, label="3. Direct HTTP access to chunks"];
    data_flow4 [shape=note, fillcolor=lightyellow, label="4. Decompress, cache, and return data"];
    
    data_flow1 -> request_image [style=invis];
    data_flow2 -> zarr_manager [style=invis];
    data_flow3 -> artifact_manager [style=invis];
    data_flow4 -> chunk_processing [style=invis];
}